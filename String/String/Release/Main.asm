; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	d:\dev\cppseries\string\string\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_05IOJFNANB@Henry@				; `string'
EXTRN	__imp_?rdstate@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp____std_terminate:PROC
EXTRN	__imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__imp_?uncaught_exception@std@@YA_NXZ:PROC
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__imp____CxxFrameHandler3:PROC
;	COMDAT ??_C@_05IOJFNANB@Henry@
CONST	SEGMENT
??_C@_05IOJFNANB@Henry@ DB 'Henry', 00H			; `string'
CONST	ENDS
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	_main
PUBLIC	?eof@?$char_traits@D@std@@SAHXZ			; std::char_traits<char>::eof
PUBLIC	?eq_int_type@?$char_traits@D@std@@SA_NABH0@Z	; std::char_traits<char>::eq_int_type
PUBLIC	?length@?$char_traits@D@std@@SAIQBD@Z		; std::char_traits<char>::length
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___std_terminate:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DQ 00000000119930522r ; 2.33398e-314
	DD	FLAT:__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	00000000500000000r		; 1.061e-313
__unwindtable$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:___std_terminate
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DQ 00000000119930522r ; 2.33398e-314
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	00000000100000000r		; 2.122e-314
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DQ 00000000019930522r ; 2.11987e-315
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	06H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	01H
	DD	00H
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	FLAT:___std_terminate
	DD	04H
	DD	FLAT:___std_terminate
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$6
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$6 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
xdata$x	ENDS
; Function compile flags: /Ogtp
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIQBD@Z
_TEXT	SEGMENT
?length@?$char_traits@D@std@@SAIQBD@Z PROC		; std::char_traits<char>::length, COMDAT
; __First$dead$ = ecx

; 461  : #if _HAS_CXX17
; 462  : 		return (__builtin_strlen(_First));
; 463  : #else /* _HAS_CXX17 */
; 464  : 		return (_CSTD strlen(_First));

	mov	eax, 5

; 465  : #endif /* _HAS_CXX17 */
; 466  : 		}

	ret	0
?length@?$char_traits@D@std@@SAIQBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Ogtp
; File d:\dev\cppseries\string\string\main.cpp
;	COMDAT _main
_TEXT	SEGMENT
_main	PROC						; COMDAT

; 13   : 	//char* name = (char[6])"Henry";
; 14   : 	//char name2[6] = { 'H', 'e', 'n', 'r', 'y', 0 };
; 15   : 	//std::cout << name2 << std::endl;
; 16   : 	//name[2] = 'a';
; 17   : 	//std::cout << name << std::endl;
; 18   : 
; 19   : 
; 20   : 	//std::string name = std::string("Henry") + ":hello!";
; 21   : 	//int pos = name.find("en");
; 22   : 
; 23   : 	//std::cout << name << std::endl;
; 24   : 
; 25   : 	char* name2 = (char*)"Henry";
; 26   : 	name2[1] = 'a';
; 27   : 	std::cout << name2 << std::endl;

	mov	ecx, DWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	mov	ecx, eax
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z

; 28   : 
; 29   : 	std::cin.get();

	mov	ecx, DWORD PTR __imp_?cin@std@@3V?$basic_istream@DU?$char_traits@D@std@@@1@A
	call	DWORD PTR __imp_?get@?$basic_istream@DU?$char_traits@D@std@@@std@@QAEHXZ

; 30   : }

	xor	eax, eax
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
__Ok$ = -44						; size = 8
__Pad$ = -44						; size = 8
__State$ = -36						; size = 4
__Pad$1$ = -32						; size = 4
$T20 = -32						; size = 1
$T14 = -32						; size = 1
$T29 = -28						; size = 4
tv833 = -24						; size = 4
tv830 = -24						; size = 4
__Ostr$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; __Ostr$ = ecx
; __Val$dead$ = edx

; 790  : 	{	// insert NTBS into char stream

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ebx, ecx
	mov	DWORD PTR __Ostr$[ebp], ebx

; 795  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	mov	ecx, DWORD PTR [ebx]
	mov	DWORD PTR __State$[ebp], 0
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase

; 433  : 		return (_Wide);

	mov	eax, DWORD PTR [ecx+4]
	add	eax, ebx
	mov	DWORD PTR tv833[ebp], eax
	mov	edi, DWORD PTR [eax+36]
	mov	esi, DWORD PTR [eax+32]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 795  : 	streamsize _Pad = _Ostr.width() <= 0 || _Ostr.width() <= _Count

	test	edi, edi
	jl	SHORT $LN17@operator
	jg	SHORT $LN104@operator
	test	esi, esi
	je	SHORT $LN17@operator
	test	edi, edi
	jl	SHORT $LN17@operator
	jg	SHORT $LN104@operator
	cmp	esi, 5
	jbe	SHORT $LN17@operator
$LN104@operator:
	sub	esi, 5
	sbb	edi, 0
	jmp	SHORT $LN117@operator
$LN17@operator:
	xorps	xmm0, xmm0
	movlpd	QWORD PTR __Pad$[ebp], xmm0
	mov	edi, DWORD PTR __Pad$[ebp+4]
	mov	esi, DWORD PTR __Pad$[ebp]
$LN117@operator:
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	eax, DWORD PTR [eax+56]
	mov	edx, ecx
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 98   : 			: _Myostr(_Ostr)

	mov	DWORD PTR __Pad$1$[ebp], edi
	mov	DWORD PTR __Ok$[ebp], ebx
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	DWORD PTR $T29[ebp], edx
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 100  : 			if (_Myostr.rdbuf() != nullptr)

	test	eax, eax
	je	SHORT $LN37@operator

; 101  : 				_Myostr.rdbuf()->_Lock();

	mov	ecx, DWORD PTR tv833[ebp]
	mov	eax, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+56]
	call	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [ebx]
	mov	edx, ecx
	mov	DWORD PTR $T29[ebp], ecx
$LN37@operator:

; 120  : 			: _Sentry_base(_Ostr)

	mov	DWORD PTR __$EHRec$[ebp+12], 0
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	eax, DWORD PTR [ecx+4]
	add	eax, ebx
	mov	DWORD PTR tv830[ebp], eax
	mov	eax, ecx

; 352  : 		return (rdstate() == ios_base::goodbit);

	mov	ebx, DWORD PTR tv830[ebp]
	cmp	DWORD PTR [ebx+12], 0
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	mov	ebx, DWORD PTR __Ostr$[ebp]
	jne	SHORT $LN33@operator
	mov	ebx, DWORD PTR tv830[ebp]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios

; 75   : 		return (_Tiestr);

	mov	edx, ecx
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	cmp	DWORD PTR [ebx+60], 0
	mov	ebx, DWORD PTR __Ostr$[ebp]
	je	SHORT $LN33@operator
	mov	edi, DWORD PTR tv830[ebp]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios

; 75   : 		return (_Tiestr);

	mov	edx, DWORD PTR $T29[ebp]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 122  : 			if (_Ostr.good() && _Ostr.tie() != nullptr && _Ostr.tie() != &_Ostr)

	mov	ecx, DWORD PTR [edi+60]
	mov	edi, DWORD PTR __Pad$1$[ebp]
	cmp	ecx, ebx
	je	SHORT $LN33@operator

; 123  : 				_Ostr.tie()->flush();

	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	mov	eax, DWORD PTR [ebx]
	mov	edx, eax
$LN33@operator:
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase

; 330  : 		return (_Mystate);

	mov	ecx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR [ecx+ebx+12]

; 352  : 		return (rdstate() == ios_base::goodbit);

	test	eax, eax
	sete	BYTE PTR __Ok$[ebp+4]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 797  : 	const typename _Myos::sentry _Ok(_Ostr);

	mov	DWORD PTR __$EHRec$[ebp+12], 1
	test	eax, eax

; 798  : 
; 799  : 	if (!_Ok)

	je	SHORT $LN8@operator

; 800  : 		_State |= ios_base::badbit;

	mov	ecx, 4

; 801  : 	else

	jmp	$LN22@operator
$LN8@operator:

; 802  : 		{	// state okay, insert
; 803  : 		_TRY_IO_BEGIN

	mov	BYTE PTR __$EHRec$[ebp+12], 2
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase

; 390  : 		return (_Fmtfl);

	mov	eax, DWORD PTR [ecx+ebx+20]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 804  : 		if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left)

	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	SHORT $LN99@operator
	npad	1
$LL4@operator:

; 805  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	test	edi, edi
	jl	SHORT $LN3@operator
	jg	SHORT $LN105@operator
	test	esi, esi
	je	SHORT $LN3@operator
$LN105@operator:
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios

; 108  : 		return (_Fillch);

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+4]
	mov	al, BYTE PTR [ecx+ebx+64]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 806  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	ecx, DWORD PTR [ecx+ebx+56]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios

; 108  : 		return (_Fillch);

	mov	BYTE PTR $T14[ebp], al
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 806  : 				if (_Traits::eq_int_type(_Traits::eof(),

	push	DWORD PTR $T14[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	eax, -1
	jne	SHORT $LN2@operator

; 807  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 808  : 					{	// insertion failed, quit
; 809  : 					_State |= ios_base::badbit;

	lea	ecx, DWORD PTR [eax+5]

; 810  : 					break;

	jmp	SHORT $LN6@operator
$LN2@operator:

; 805  : 			for (; 0 < _Pad; --_Pad)	// pad on left

	add	esi, -1
	adc	edi, -1
	jmp	SHORT $LL4@operator
$LN3@operator:

; 814  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

	mov	edx, DWORD PTR [ebx]
$LN99@operator:
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios

; 87   : 		return (_Mystrbuf);

	mov	eax, DWORD PTR [edx+4]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 814  : 			&& _Ostr.rdbuf()->sputn(_Val, _Count) != _Count)

	push	0
	push	5
	push	OFFSET ??_C@_05IOJFNANB@Henry@
	mov	ecx, DWORD PTR [eax+ebx+56]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	eax, 5
	jne	SHORT $LN106@operator
	test	edx, edx
	jne	SHORT $LN106@operator
$LL108@operator:

; 815  : 			_State |= ios_base::badbit;
; 816  : 
; 817  : 		if (_State == ios_base::goodbit)
; 818  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	test	edi, edi
	jl	SHORT $LN112@operator
	jg	SHORT $LN107@operator
	test	esi, esi
	je	SHORT $LN112@operator
$LN107@operator:
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios

; 108  : 		return (_Fillch);

	mov	eax, DWORD PTR [ebx]
	mov	ecx, DWORD PTR [eax+4]
	mov	al, BYTE PTR [ecx+ebx+64]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 819  : 				if (_Traits::eq_int_type(_Traits::eof(),

	mov	ecx, DWORD PTR [ecx+ebx+56]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios

; 108  : 		return (_Fillch);

	mov	BYTE PTR $T20[ebp], al
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 819  : 				if (_Traits::eq_int_type(_Traits::eof(),

	push	DWORD PTR $T20[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	eax, -1
	jne	SHORT $LN5@operator
$LN106@operator:

; 820  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 821  : 					{	// insertion failed, quit
; 822  : 					_State |= ios_base::badbit;
; 823  : 					break;
; 824  : 					}
; 825  : 		_Ostr.width(0);

	mov	ecx, 4
	jmp	SHORT $LN6@operator
$LN5@operator:

; 815  : 			_State |= ios_base::badbit;
; 816  : 
; 817  : 		if (_State == ios_base::goodbit)
; 818  : 			for (; 0 < _Pad; --_Pad)	// pad on right

	add	esi, -1
	adc	edi, -1
	jmp	SHORT $LL108@operator
$LN112@operator:

; 820  : 					_Ostr.rdbuf()->sputc(_Ostr.fill())))
; 821  : 					{	// insertion failed, quit
; 822  : 					_State |= ios_base::badbit;
; 823  : 					break;
; 824  : 					}
; 825  : 		_Ostr.width(0);

	xor	ecx, ecx
$LN6@operator:
	mov	eax, DWORD PTR [ebx]
	mov	eax, DWORD PTR [eax+4]
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\xiosbase

; 439  : 		_Wide = _Newwidth;

	mov	DWORD PTR [eax+ebx+32], 0
	mov	DWORD PTR [eax+ebx+36], 0
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream
	jmp	SHORT $LN118@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:

; 826  : 		_CATCH_IO_(_Ostr)

	mov	edx, DWORD PTR __Ostr$[ebp]
	push	1
	push	4
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, edx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	mov	eax, $LN23@operator
	ret	0
$LN23@operator:
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ios
	mov	ebx, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR __State$[ebp]
$LN118@operator:
; File i:\visualstudio2017\vc\tools\msvc\14.16.27023\include\ostream

; 827  : 		}
; 828  : 
; 829  : 	_Ostr.setstate(_State);

	mov	DWORD PTR __$EHRec$[ebp+12], 1
$LN22@operator:
	mov	eax, DWORD PTR [ebx]
	push	0
	push	ecx
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, ebx
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z

; 135  : 			{	// destroy the object

	mov	DWORD PTR __$EHRec$[ebp+12], 4

; 136  :  #if _HAS_EXCEPTIONS
; 137  : 			if (!_STD uncaught_exception())	// TRANSITION, OS#15518458

	call	DWORD PTR __imp_?uncaught_exception@std@@YA_NXZ
	mov	esi, DWORD PTR __Ok$[ebp]
	test	al, al
	jne	SHORT $LN82@operator

; 138  : 				{
; 139  : 				this->_Myostr._Osfx();

	mov	ecx, esi
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
$LN82@operator:

; 105  : 			{	// destroy after unlocking

	mov	BYTE PTR __$EHRec$[ebp+12], 5

; 106  : 			if (_Myostr.rdbuf() != nullptr)

	mov	eax, DWORD PTR [esi]
	mov	eax, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax+esi+56]
	test	ecx, ecx
	je	SHORT $LN109@operator

; 107  : 				_Myostr.rdbuf()->_Unlock();

	mov	eax, DWORD PTR [ecx]
	call	DWORD PTR [eax+8]
$LN109@operator:

; 830  : 	return (_Ostr);
; 831  : 	}

	mov	eax, ebx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-48]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
END
